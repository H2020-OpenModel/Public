[build-system]
requires = ['flit_core >=3.4,<4']
build-backend = 'flit_core.buildapi'

[project]
name = 'execflowdemo'
version = '0.1.0'
readme = '../README.md'
license = {file = 'LICENSE'}
description = "openmodel execflowdemo"
classifiers = [
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
]
requires-python = '>=3.8'

dependencies = [
    'execflow@git+https://github.com/H2020-OpenModel/ExecFlow',
]

[project.urls]
Home = 'https://github.com/H2020-OpenModel/Public/OntoTrans2ndWorkshop'
Source = 'https://github.com/H2020-OpenModel/Public/OntoTrans2ndWorkshop'

[project.entry-points."aiida.parsers"]
"execflowdemo.lammps.density_parser" = "execflowdemo.parsers.lammpslog_parser:LammpsLogParser"
[project.entry-points."aiida.calculations"]
"execflowdemo.lammps.density" = "execflowdemo.calculations.lammps:parse_density"

[tool.flit.module]
name = 'execflowdemo'

[tool.flynt]
line-length = 120
fail-on-change = true

[tool.isort]
force_sort_within_sections = true
include_trailing_comma = true
line_length = 120
multi_line_output = 3  # this configuration is compatible with yapf

[tool.pydocstyle]
ignore = [
    'D104',
    'D202',
    'D203',
    'D213'
]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.tool-check]
generated-members = 'self.exit_codes.*'

